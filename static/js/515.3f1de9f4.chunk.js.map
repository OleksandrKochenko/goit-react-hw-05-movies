{"version":3,"file":"static/js/515.3f1de9f4.chunk.js","mappings":"qPAMMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oFAiFhB,UA1EqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,gBAAYF,GACfG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEhD,GAAkEC,EAAAA,EAAAA,UAAS,CACzEC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,OAAQ,KANV,sBAASL,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,OAAUC,EAAtD,KA0BA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,GAAYhB,EAAK,CAAC,GAD3C,OACQiB,EADR,OAEEH,EAAS,CACPN,MAAOS,EAAST,MAChBC,IAAI,mCAAD,OAAqCQ,EAASC,aACjDR,KAAMO,EAASE,aAAaC,MAAM,EAAG,GACrCT,MAAM,GAAD,OAAKU,KAAKC,MAA8B,GAAxBL,EAASM,cAAzB,KACLX,SAAUK,EAASL,SACnBC,OAAQI,EAASJ,OAAOW,KAAI,SAAAC,GAC1B,OAAOA,EAAMC,IACd,MAVL,4CADc,uBAAC,WAAD,wBAcdC,EACD,GAAE,CAAC3B,KAGF,iCACE,UAAC,KAAD,CAAM4B,GAAIzB,EAAS0B,QAASC,MAAO,CAAEC,OAAQ,UAA7C,UACG,KADH,eAGA,iBACED,MAAO,CACLE,QAAS,QAFb,WAKE,gBACEF,MAAO,CAAEC,OAAQ,UACjBE,IAAG,UAAKxB,GACRyB,IAAG,UAAK1B,EAAL,cAEL,4BACE,oCAAQA,EAAR,aAAkBE,EAAlB,aACA,wCAAgBC,MAChB,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOsB,KAAK,eAGpB,mBACA,4BACE,cAAGL,MAAO,CAAEC,OAAQ,UAApB,qCACA,2BACE,yBACE,SAACpC,EAAD,CAAYiC,GAAG,OAAf,qBAEF,yBACE,SAACjC,EAAD,CAAYiC,GAAG,UAAf,8BAIN,mBACA,SAAC,KAAD,MAGL,C,8FChFDQ,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMrB,EAAW,mCAAG,WAAOsB,EAAQC,GAAf,gFACnBC,EAAS,CACbD,OAAQ,CACNE,MAAOF,EAAOE,MACdC,SAAUH,EAAOG,SACjBC,cAAeJ,EAAOI,gBALD,SAQFP,EAAAA,EAAAA,IAAUE,EAAQE,GARhB,cAQnBI,EARmB,yBASlBA,EAASC,MATS,2CAAH,uD","sources":["pages/movie-details.jsx","services/api.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { fetchPhotos } from 'services/api';\n\nconst StyledLink = styled(Link)`\n  color: #212121;\n  &:focus {\n    color: orangered;\n  }\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const url = `movie/${movieId}`;\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  const [{ title, img, year, score, overview, genres }, setState] = useState({\n    title: '',\n    img: '',\n    year: '',\n    score: '',\n    overview: '',\n    genres: [],\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const responce = await fetchPhotos(url, {});\n      setState({\n        title: responce.title,\n        img: `https://image.tmdb.org/t/p/w300/${responce.poster_path}`,\n        year: responce.release_date.slice(0, 4),\n        score: `${Math.round(responce.vote_average * 10)}%`,\n        overview: responce.overview,\n        genres: responce.genres.map(genre => {\n          return genre.name;\n        }),\n      });\n    }\n    fetchData();\n  }, [url]);\n\n  return (\n    <>\n      <Link to={backLink.current} style={{ margin: '0 10px' }}>\n        {'<-'} Go Back\n      </Link>\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <img\n          style={{ margin: '0 10px' }}\n          src={`${img}`}\n          alt={`${title} poster`}\n        />\n        <div>\n          <h2>{`${title} (${year})`} </h2>\n          <p>User Score: {score}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.join(', ')}</p>\n        </div>\n      </div>\n      <hr />\n      <div>\n        <p style={{ margin: '0 10px' }}>Additional information</p>\n        <ul>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9a450fbd652c62e887bc78d79e7a75f2';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchPhotos = async (addUrl, params) => {\n  const config = {\n    params: {\n      query: params.query,\n      language: params.language,\n      include_adult: params.include_adult,\n    },\n  };\n  const response = await axios.get(addUrl, config);\n  return response.data;\n};\n"],"names":["StyledLink","styled","Link","movieId","useParams","url","location","useLocation","backLink","useRef","state","from","useState","title","img","year","score","overview","genres","setState","useEffect","fetchPhotos","responce","poster_path","release_date","slice","Math","round","vote_average","map","genre","name","fetchData","to","current","style","margin","display","src","alt","join","axios","api_key","addUrl","params","config","query","language","include_adult","response","data"],"sourceRoot":""}