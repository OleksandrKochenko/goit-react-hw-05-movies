{"version":3,"file":"static/js/773.fec0573c.chunk.js","mappings":"kOA2CA,UAvCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,IAAhBF,EAAKG,OAAc,CAAC,IACPC,EADM,mCACrB,qGACyBC,EAAAA,EAAAA,IAAeR,GADxC,OACQS,EADR,OAEEL,GAAQ,OAAIK,EAASN,OAFvB,2CADqB,qDAKrBI,GACD,CACF,GAAE,CAACP,EAASG,KAGX,wBACGA,EAAKG,OAAS,GACbH,EAAKO,KAAI,SAAAC,GACP,OACE,gBAAmBC,MAAO,CAAEC,QAAS,QAArC,WACE,gBACED,MAAO,CAAEE,MAAO,QAASC,OAAQ,OACjCC,IACEL,EAAMM,cAAN,yCACkCN,EAAMM,cAE1CC,IAAKP,EAAMQ,QAEb,4BACE,wBAAKR,EAAMQ,QACX,uCAAeR,EAAMS,kBAXhBT,EAAMU,GAelB,KAGR,C,+LCpCDC,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,QACVC,eAAe,GAGV,IAAMC,EAAc,mCAAG,0FACX,qBADW,SAELJ,EAAAA,EAAAA,IADN,sBADW,cAEtBK,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,+EACZ,eACXC,EAAS,CACbC,OAAQ,CAAEF,MAAOA,IAHU,SAKNR,EAAAA,EAAAA,IAJN,eAI0BS,GALd,cAKvBJ,EALuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfK,EAAiB,mCAAG,WAAMjC,GAAN,gFACzBkC,EADyB,gBACLlC,GADK,SAERsB,EAAAA,EAAAA,IAAUY,GAFF,cAEzBP,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBpB,EAAc,mCAAG,WAAMR,GAAN,gFACtBkC,EADsB,gBACFlC,EADE,qBAELsB,EAAAA,EAAAA,IAAUY,GAFL,cAEtBP,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAMdO,EAAiB,mCAAG,WAAMnC,GAAN,gFACzBkC,EADyB,gBACLlC,EADK,qBAERsB,EAAAA,EAAAA,IAAUY,GAFF,cAEzBP,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,qD","sources":["components/cast.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (cast.length === 0) {\n      async function fetchData() {\n        const responce = await fetchMovieCast(movieId);\n        setCast([...responce.cast]);\n      }\n      fetchData();\n    }\n  }, [movieId, cast]);\n\n  return (\n    <ul>\n      {cast.length > 0 &&\n        cast.map(actor => {\n          return (\n            <li key={actor.id} style={{ display: 'flex' }}>\n              <img\n                style={{ width: '120px', margin: '5px' }}\n                src={\n                  actor.profile_path &&\n                  `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                }\n                alt={actor.name}\n              />\n              <div>\n                <h4>{actor.name}</h4>\n                <p>Character: {actor.character}</p>\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9a450fbd652c62e887bc78d79e7a75f2';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const fetchTrendings = async () => {\n  const endPoint = 'trending/movie/day';\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchSerchQuery = async query => {\n  const endPoint = 'search/movie';\n  const config = {\n    params: { query: query },\n  };\n  const response = await axios.get(endPoint, config);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const endPoint = `movie/${movieId}`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const endPoint = `movie/${movieId}/credits`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const endPoint = `movie/${movieId}/reviews`;\n  const response = await axios.get(endPoint);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","length","fetchData","fetchMovieCast","responce","map","actor","style","display","width","margin","src","profile_path","alt","name","character","id","axios","api_key","language","include_adult","fetchTrendings","response","data","fetchSerchQuery","query","config","params","fetchMovieDetails","endPoint","fetchMovieReviews"],"sourceRoot":""}