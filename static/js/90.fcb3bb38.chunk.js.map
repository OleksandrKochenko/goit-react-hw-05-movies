{"version":3,"file":"static/js/90.fcb3bb38.chunk.js","mappings":"8QA4CA,EAxCmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAM,eACNC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,GAAYJ,EAAK,CAAEJ,MAAOA,IADnD,UAEkC,KAD1BS,EADR,QAEeC,QAAQC,OAFvB,uBAGIC,MAAM,qCAHV,0BAMIT,GAAU,WACR,OAAO,OAAIM,EAASC,QACrB,IARL,4CADc,uBAAC,WAAD,wBAYdG,EACD,GAAE,CAACb,KAGF,iCACE,eAAGc,MAAO,CAAEC,OAAQ,UAApB,6BAAiDf,EAAjD,OACCE,EAAOS,OAAS,IACf,wBACGT,EAAOc,KAAI,SAAAC,GACV,OACE,eAAmBC,GAAID,EAAMC,GAA7B,UACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,EAAMC,IAAME,MAAO,CAAEC,KAAMhB,GAAxC,SACGY,EAAMK,SAFFL,EAAMC,GAMlB,QAKV,ECHD,EAnCe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAC,UAAGF,EAAaG,IAAI,YAApB,QAA4B,GACnC,GAA0B1B,EAAAA,EAAAA,UAASyB,GAAnC,eAAO1B,EAAP,KAAc4B,EAAd,KAaA,OACE,iCACE,kBAAMd,MAAO,CAAEC,OAAQ,UAAYc,SAPlB,SAAAC,GACnBA,EAAEC,iBACFH,EAASF,EAAEM,OACZ,EAIG,WACE,kBACEC,MAAOP,EACPQ,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SApBa,SAAAR,GACA,KAAnBA,EAAES,OAAON,MACLR,EAAgB,CAAC,GACjBA,EAAgB,CAAEC,EAAGI,EAAES,OAAON,OACnC,KAkBK,mBAAQC,KAAK,SAAb,0BAEF,kBACW,KAAVlC,IAAgB,SAAC,EAAD,CAAYA,MAAOA,MAGzC,C,8FChCDwC,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMjC,EAAW,mCAAG,WAAOkC,EAAQC,GAAf,gFACnBC,EAAS,CACbD,OAAQ,CACN3C,MAAO2C,EAAO3C,MACd6C,SAAUF,EAAOE,SACjBC,cAAeH,EAAOG,gBALD,SAQFN,EAAAA,EAAAA,IAAUE,EAAQE,GARhB,cAQnBG,EARmB,yBASlBA,EAASC,MATS,2CAAH,uD","sources":["components/search-list.jsx","pages/movie-search.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchPhotos } from 'services/api';\n\nconst SearchList = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const url = 'search/movie';\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchData() {\n      const responce = await fetchPhotos(url, { query: query });\n      if (responce.results.length === 0) {\n        alert('There is no movies for this query');\n        return;\n      } else {\n        setMovies(() => {\n          return [...responce.results];\n        });\n      }\n    }\n    fetchData();\n  }, [query]);\n\n  return (\n    <>\n      <p style={{ margin: '0 10px' }}>Search list of \"{query}\"</p>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id} id={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchList from 'components/search-list';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const q = searchParams.get('q') ?? '';\n  const [query, setQuery] = useState(q);\n\n  const handleChange = e => {\n    e.target.value === ''\n      ? setSearchParams({})\n      : setSearchParams({ q: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(q.trim());\n  };\n\n  return (\n    <>\n      <form style={{ margin: '0 10px' }} onSubmit={handleSubmit}>\n        <input\n          value={q}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\"> Search </button>\n      </form>\n      <hr />\n      {query !== '' && <SearchList query={query} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9a450fbd652c62e887bc78d79e7a75f2';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchPhotos = async (addUrl, params) => {\n  const config = {\n    params: {\n      query: params.query,\n      language: params.language,\n      include_adult: params.include_adult,\n    },\n  };\n  const response = await axios.get(addUrl, config);\n  return response.data;\n};\n"],"names":["query","useState","movies","setMovies","url","location","useLocation","useEffect","fetchPhotos","responce","results","length","alert","fetchData","style","margin","map","movie","id","to","state","from","title","useSearchParams","searchParams","setSearchParams","q","get","setQuery","onSubmit","e","preventDefault","trim","value","type","autoComplete","autoFocus","placeholder","onChange","target","axios","api_key","addUrl","params","config","language","include_adult","response","data"],"sourceRoot":""}